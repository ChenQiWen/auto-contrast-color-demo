# .github/workflows/deploy.yml

name: Deploy Vite Project to GitHub Pages

on:
  # 在推送到 main 分支时触发部署
  push:
    branches: [ main ]
  # 允许你手动从 Actions 页触发此工作流程
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许同时进行一次部署，跳过正在运行或等待中的构建队列。
# 但是，不要取消进行中的运行，因为我们希望允许这些生产部署完成。
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 构建任务
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 迁出代码
        uses: actions/checkout@v4
      - name: Set up Node.js 设置Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # 你可以根据需要修改 Node.js 版本
          cache: 'npm' # 启用 npm 缓存
      - name: Install dependencies 安装依赖
        run: npm install
      - name: Build 构建项目
        run: npm run build # 运行 package.json 中的 build 命令
        env:
          # 如果你的构建需要环境变量，在此处设置
          # NODE_ENV: production
      - name: Setup Pages 配置 Pages
        uses: actions/configure-pages@v5
        # 这个 action 会根据你的仓库设置自动配置 Pages
      - name: Upload artifact 上传构建产物
        uses: actions/upload-pages-artifact@v3
        with:
          # 从 'dist' 目录上传 (Vite 默认的构建输出目录)
          path: './dist'

  # 部署任务
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # Action 会输出部署后的 URL
    runs-on: ubuntu-latest
    needs: build # 部署任务依赖于构建任务成功完成
    steps:
      - name: Deploy to GitHub Pages 部署到 GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        # 此 Action 会自动获取 build 任务上传的 artifact 并部署